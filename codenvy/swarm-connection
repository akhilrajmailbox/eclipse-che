1: Collect the IP address of Codenvy CODENVY-IP from your master node.


2: Collect the network interface of the new workspace node WS-IF:

# Get the network interface from your ws node, typically 'eth1' or 'eth0':
ifconfig


3: On each workspace node, configure and restart Docker with additional options:

    --cluster-store=zk://<CODENVY-IP>:2181
    --cluster-advertise=<WS-IF>:2375
    --host=tcp://0.0.0.0:2375
    --insecure-registry=<CODENVY-IP>:5000



The first parameter tells Docker where the key-value store is located. The second parameter tells Docker how to link its workspace node to the key-value storage broadcast. The third parameter opens Docker to communicate on Codenvy’s swarm cluster (this parameter is not needed if your workspace node is in a VM). And the fourth parameter allows the Docker daemon to push snapshots to Codenvy’s internal registry (this parameter is not needed if you are using an external registry). If you are running Codenvy behind a proxy, each workspace node Docker daemon should get the same proxy configuration that you placed on the master node. If you would like your Codenvy master node to also host workspaces, you can add these parameters to your master Docker daemon as well.




4: Verify that Docker is running properly. Docker will not start if it is not able to connect to the key-value storage. Run a simple docker run hello-world to verify Docker is happy. Each workspace node that successfully runs this command is part of the overlay network.




5: On the Codenvy master node, modify codenvy.env to uncomment or add:

# Uncomment this property to switch Codenvy from bridge to overlay mode:
CODENVY_MACHINE_DOCKER_NETWORK_DRIVER=overlay

# Comma-separated list of IP addresses for each workspace node
# The ports must match the `--cluster-advertise` port added to Docker daemons
CODENVY_SWARM_NODES=<WS-IP>:2375,<WS2-IP>:2375,<WSn-IP>:2375

    Restart Codenvy with codenvy/cli restart




